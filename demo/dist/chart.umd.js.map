{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.ts","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.ts","../src/helpers/helpers.canvas.ts","../src/helpers/helpers.config.ts","../src/helpers/helpers.curve.ts","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.ts","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller.js';\n\nimport * as helpers from './helpers/index.js';\nimport _adapters from './core/core.adapters.js';\nimport Animation from './core/core.animation.js';\nimport animator from './core/core.animator.js';\nimport Animations from './core/core.animations.js';\nimport * as controllers from './controllers/index.js';\nimport DatasetController from './core/core.datasetController.js';\nimport Element from './core/core.element.js';\nimport * as elements from './elements/index.js';\nimport Interaction from './core/core.interaction.js';\nimport layouts from './core/core.layouts.js';\nimport * as platforms from './platform/index.js';\nimport * as plugins from './plugins/index.js';\nimport registry from './core/core.registry.js';\nimport Scale from './core/core.scale.js';\nimport * as scales from './scales/index.js';\nimport Ticks from './core/core.ticks.js';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","useOffsetPos","shadowRoot","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","addRectPath","mouseX","mouseY","inXRange","inYRange","hoverRadius","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","labelCount","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms"],"mappings":"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","x_google_ignoreList":[5]}